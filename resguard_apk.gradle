apply plugin: 'AndResGuard'
//AndRes
andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    // 当你使用v2签名的时候，7zip压缩是无法生效的。
    use7zip = true
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    //白名单配置 UM必须配置白名单 否则会提示找不到资源文件
    whiteList = [
            // for fabric
            "R.string.com.crashlytics.*",
            // for umeng update
            "R.string.umeng*",
            "R.string.UM*",
            "R.string.tb_*",
            "R.string.rc_*",
            "R.layout.umeng*",
            "R.layout.tb_*",
            "R.layout.rc_*",
            "R.drawable.umeng*",
            "R.drawable.tb_*",
            "R.drawable.rc_*",
            "R.drawable.u1*",
            "R.drawable.u2*",
            "R.anim.umeng*",
            "R.color.umeng*",
            "R.color.tb_*",
            "R.color.rc_*",
            "R.style.*UM*",
            "R.style.umeng*",
            "R.style.rc_*",
            "R.id.umeng*",
            "R.id.rc_*",
            // umeng share for sina
            "R.drawable.sina*",
            // for google-services.json
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key",
            "R.string.google_storage_bucket",
            "R.string.project_id",
            "R.string.com.crashlytics.android.build_id",
            "R.string.com.google.firebase.crashlytics.mapping_file_id",
            "R.dimen.rc_*",
            //getui(个推)
            "R.drawable.push",
            "R.drawable.push_small",
            "R.layout.getui_notification",
            // JPush(极光推送)
            "R.drawable.jpush_notification_icon",
            // GrowingIO
            "R.string.growingio_project_id",
            "R.string.growingio_url_scheme",
            "R.string.growingio_channel",
            // firestore
            "R.string.project_id",
            // Huawei push
            "R.string.hms_*",
            "R.string.connect_server_fail_prompt_toast",
            "R.string.getting_message_fail_prompt_toast",
            "R.string.no_available_network_prompt_toast",
            "R.string.third_app_*",
            "R.string.upsdk_*",
            "R.style.upsdkDlDialog",
            "R.style.AppTheme",
            "R.style.AppBaseTheme",
            "R.dimen.upsdk_dialog_*",
            "R.color.upsdk_*",
            "R.layout.upsdk_*",
            "R.drawable.upsdk_*",
            "R.drawable.hms_*",
            "R.layout.hms_*",
            "R.id.hms_*",
            // Firebase Crashlytics
            "R.bool.com.crashlytics.useFirebaseAppId",
            "R.string.com.crashlytics.useFirebaseAppId",
            "R.string.google_app_id",
            "R.bool.com.crashlytics.CollectDeviceIdentifiers",
            "R.string.com.crashlytics.CollectDeviceIdentifiers",
            "R.bool.com.crashlytics.CollectUserIdentifiers",
            "R.string.com.crashlytics.CollectUserIdentifiers",
            "R.string.com.crashlytics.ApiEndpoint",
            "R.string.io.fabric.android.build_id",
            "R.string.com.crashlytics.android.build_id",
            "R.bool.com.crashlytics.RequireBuildId",
            "R.string.com.crashlytics.RequireBuildId",
            "R.bool.com.crashlytics.CollectCustomLogs",
            "R.string.com.crashlytics.CollectCustomLogs",
            "R.bool.com.crashlytics.Trace",
            "R.string.com.crashlytics.Trace",
            "R.string.com.crashlytics.CollectCustomKeys",
            // Share SDK
            "R.id.ssdk*",
            "R.string.mobcommon*",
            "R.string.ssdk*",
            "R.string.mobdemo*",
            "R.drawable.mobcommon*",
            "R.drawable.ssdk*",
            "R.layout.mob*",
            "R.style.mobcommon*",
            //穿山甲广告SDK
            "R.string.tt_*",
            "R.integer.tt_*",
            "R.layout.tt_*",
            "R.drawable.tt_*",
            "R.style.tt_*",
            "R.dimen.tt_*",
            "R.anim.tt_*",
            "R.color.tt_*",
            "R.id.tt_*",
            //Mintegral广告
            "R.string.mbridge*",
            "R.layout.mbridge*",
            "R.drawable.mbridge*",
            "R.anim.mbridge*",
            "R.color.mbridge*",
            "R.style.mbridge*",
            "R.id.mbridge*",
            // tradplus
            "R.string.tp_*",
            "R.drawable.tp_*",
            "R.layout.tp_*",
            "R.id.tp_*",
            "R.string.cp_*",
            "R.drawable.cp_*",
            "R.layout.cp_*",
            "R.id.cp_*",
            // topon
            "R.string.anythink_*",
            "R.drawable.anythink_*",
            "R.layout.anythink_*",
            "R.id.anythink_*",
            "R.dimen.anythink_*",
            "R.style.anythink_*",
            "R.color.anythink_*",
            // smaato
            "R.string.smaato_*",
            "R.drawable.smaato_*",
            "R.layout.smaato_*",
            "R.id.smaato_*",
            "R.dimen.smaato_*",
            "R.style.smaato_*",
            "R.color.smaato_*",
            "R.raw.html_player_vast*",
            // onesignal
            "R.layout.onesignal*",
            "R.anim.onesignal*",
            "R.drawable.ic_os*",
            "R.raw.consumer*",
            "R.string.location*",
            // bigo
            "R.layout.bigo*",
            "R.anim.bigo*",
            "R.drawable.bigo*",
            "R.string.bigo*",
            "R.xml.bigo*",
            "R.color.bigo*",
            "R.style.bigo*"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.21'
    }
}
afterEvaluate {
    if (project.android.productFlavors.size() > 0) {// 如果有产品风味
        project.android.productFlavors.each { flavor ->
            def productFlavor = flavor.name.capitalize()
            def resguardReleaseTask = project.tasks.findByName(String.format("resguard%sRelease", productFlavor))
            def assembleReleaseTask = project.tasks.findByName(String.format("assemble%sRelease", productFlavor))
            def dependsOnList1 = assembleReleaseTask.getDependsOn()
            def dependsOnList2 = resguardReleaseTask.getDependsOn()
            dependsOnList2.clear()
            resguardReleaseTask.setDependsOn(dependsOnList1)
            assembleReleaseTask.dependsOn resguardReleaseTask
        }
    } else { // 无产品风味
        def resguardReleaseTask = project.tasks.findByName("resguardRelease")
        def assembleReleaseTask = project.tasks.findByName("assembleRelease")

        def dependsOnList1 = assembleReleaseTask.getDependsOn()
        def dependsOnList2 = resguardReleaseTask.getDependsOn()
        dependsOnList2.clear()
        resguardReleaseTask.setDependsOn(dependsOnList1)
        assembleReleaseTask.dependsOn resguardReleaseTask
    }
}